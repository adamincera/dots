*** dict <node,graph> x;
*** x[n];
DICT LT NODE COMMA GRAPH GT ID SEMI ID LBRACKET ID RBRACKET SEMI

*** dict <string,num> x; (primitive example)
*** x[n+1];
*** x[2-2];
*** x[a*b];
DICT LT STRING COMMA NUM GT ID SEMI ID LBRACKET ID PLUS LITERAL RBRACKET SEMI ID LBRACKET LITERAL MINUS LITERAL RBRACKET SEMI ID LBRACKET ID TIMES ID RBRACKET SEMI  

*** dict <string,num> x = {'one':x, y:z+i}
DICT LT STRING COMMA NUM GT ID ASSIGN LBRACE LITERAL COLON ID COMMA ID COLON ID PLUS ID RBRACE SEMI

*** dict<key_type,data_type> x = {entry_1: something_1, entry_2: something_2}
*** try keys and declarations of different types
***DICT LT STRING COMMA NUM GT ID ASSIGN LBRACE STRING COLON NUM COMMA STRING COLON NUM RBRACE SEMI
***DICT LT STRING COMMA NUM GT ID ASSIGN LBRACE STRING COLON NUM COMMA STRING COLON NUM RBRACE SEMI

*** should fail
***DICT LT STRING COMMA NUM GT ID ASSIGN LBRACE NUM COLON STRING COMMA STRING COLON NUM RBRACE SEMI
***DICT LT STRING COMMA NUM GT ID ASSIGN LBRACE NUM COLON STRING COMMA NUM COLON STRING RBRACE SEMI